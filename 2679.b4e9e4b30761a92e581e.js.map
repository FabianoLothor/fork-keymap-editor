{"version":3,"file":"2679.b4e9e4b30761a92e581e.js","mappings":"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","sources":["webpack:///./src/Common/action-button.module.css?ed83","webpack:///./src/Common/ActionButton.js","webpack:///./src/Sources/Clipboard/store.js","webpack:///./src/Sources/Clipboard/KeymapRawInput.js","webpack:///./src/Sources/Clipboard/styles.module.css?ff1a","webpack:///./src/Sources/Clipboard/KeymapSourceDialog.js","webpack:///./src/Sources/Clipboard/ClipboardActions.js","webpack:///./src/Sources/Clipboard/KeyboardAddButton.js","webpack:///./src/Sources/Clipboard/KeyboardSelector.js","webpack:///./src/Sources/Clipboard/Picker.js","webpack:///./src/Common/action-button.module.css","webpack:///./src/Sources/Clipboard/styles.module.css"],"sourcesContent":["\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!./action-button.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!./action-button.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import styles from './action-button.module.css'\n\nfunction ActionButton ({ children, secondary, className, ...props }) {\n  return (\n    <button\n      className={[\n        className,\n        styles.action,\n        secondary && styles.secondary\n      ].join(' ')}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n}\n\nActionButton.defaultProps = {\n  className: ''\n}\n\nexport default ActionButton\n","import { createContext, useMemo, useReducer } from 'react'\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst STORAGE_KEY_KEYBOARDS = 'keymap_editor_clipboard_keyboards'\nconst STORAGE_KEY_KEYBOARD = `${STORAGE_KEY_KEYBOARDS}:`\nconst STORAGE_KEY_SELECTED_KEYBOARD = 'keymap_editor_clipboard_selected_keyboard'\n\nconst BLANK_KEYBOARD_ENTRY = JSON.stringify({\n  keymapRaw: '',\n  keymapParsed: null,\n  metadataRaw: '',\n  metadataParsed: null\n})\n\nfunction initialState () {\n  const storedKeyboardId = JSON.parse(localStorage.getItem(STORAGE_KEY_SELECTED_KEYBOARD) || 'null')\n\n  const INITIAL_KEYBOARDS = JSON.parse(localStorage.getItem(STORAGE_KEY_KEYBOARDS) || '[]')\n  const INITIAL_KEYBOARD_ID = storedKeyboardId || INITIAL_KEYBOARDS[0]?.id\n\n  const INITIAL_KEYBOARD_DATA = JSON.parse(\n    localStorage.getItem(`${STORAGE_KEY_KEYBOARD}${INITIAL_KEYBOARD_ID}`) || 'null'\n  )\n\n  const INITIAL_KEYMAP_RAW = INITIAL_KEYBOARD_DATA?.keymapRaw\n  const INITIAL_KEYMAP_PARSED = INITIAL_KEYBOARD_DATA?.keymapParsed\n  const INITIAL_METADATA_RAW = INITIAL_KEYBOARD_DATA?.metadataRaw\n  const INITIAL_METADATA_PARSED = INITIAL_KEYBOARD_DATA?.metadataParsed\n\n  return {\n    keyboards: INITIAL_KEYBOARDS,\n    selectedKeyboard: INITIAL_KEYBOARD_ID,\n    keymapRaw: INITIAL_KEYMAP_RAW,\n    keymapParsed: INITIAL_KEYMAP_PARSED,\n    metadataRaw: INITIAL_METADATA_RAW,\n    metadataParsed: INITIAL_METADATA_PARSED,\n    modalOpen: !INITIAL_KEYMAP_RAW,\n    pending: {\n      keymapRaw: INITIAL_KEYMAP_RAW,\n      keymapParsed: INITIAL_KEYMAP_PARSED,\n      metadataRaw: INITIAL_METADATA_RAW,\n      metadataParsed: INITIAL_METADATA_PARSED\n    }\n  }\n}\n\nexport const pickerSlice = createSlice({\n  name: 'clipboard-picker',\n  initialState,\n  reducers: {\n    selectedKeyboard (state, action) {\n      state.selectedKeyboard = action.payload.keyboard\n\n      const key = `${STORAGE_KEY_KEYBOARD}${state.selectedKeyboard}`\n      const {\n        keymapRaw, keymapParsed, metadataRaw, metadataParsed\n      } = JSON.parse(localStorage.getItem(key) || BLANK_KEYBOARD_ENTRY)\n\n      state.keymapRaw = keymapRaw\n      state.keymapParsed = keymapParsed\n      state.metadataRaw = metadataRaw\n      state.metadataParsed = metadataParsed\n\n      localStorage.setItem(STORAGE_KEY_SELECTED_KEYBOARD, JSON.stringify(state.selectedKeyboard))\n    },\n    addKeyboard (state, action) {\n      const { id, name = null } = action.payload\n      const keyboard = { id, name }\n\n      state.keyboards.push(keyboard)\n      localStorage.setItem(STORAGE_KEY_KEYBOARDS, JSON.stringify(state.keyboards))\n      localStorage.setItem(`${STORAGE_KEY_KEYBOARD}${id}`, BLANK_KEYBOARD_ENTRY)\n    },\n    setKeymap (state, action) {\n      const { raw, parsed, pending = false } = action.payload\n\n      state.pending.keymapRaw = raw\n      state.pending.keymapParsed = parsed\n      if (!pending) {\n        state.keymapRaw = raw\n        state.keymapParsed = parsed\n      }\n    },\n    setMetadata (state, action) {\n      const { raw, parsed, pending = false } = action.payload\n      const target = pending ? state.pending : state\n      target.metadataRaw = raw\n      target.metadataParsed = parsed\n    },\n    confirmPending (state) {\n      state.keymapRaw = state.pending.keymapRaw\n      state.keymapParsed = state.pending.keymapParsed\n      state.metadataRaw = state.pending.metadataRaw\n      state.metadataParsed = state.pending.metadataParsed\n\n      const key = `${STORAGE_KEY_KEYBOARD}${state.selectedKeyboard}`\n      localStorage.setItem(key, JSON.stringify({\n        keymapRaw: state.keymapRaw,\n        keymapParsed: state.keymapParsed,\n        metadataRaw: state.metadataRaw,\n        metadataParsed: state.metadataParsed\n      }))\n\n      const keyboard = state.keyboards.find(keyboard => keyboard.id === state.selectedKeyboard)\n      if (!keyboard.name) {\n        keyboard.name = state.metadataParsed.name\n        localStorage.setItem(STORAGE_KEY_KEYBOARDS, JSON.stringify(state.keyboards))\n      }\n    },\n    openModal (state) {\n      state.modalOpen = true\n      state.pending.keymapRaw = state.keymapRaw\n      state.pending.keymapParsed = state.keymapParsed\n      state.pending.metadataRaw = state.metadataRaw\n      state.pending.metadataParsed = state.metadataRaw ? JSON.parse(state.metadataRaw) : null\n    },\n    closeModal (state) {\n      state.modalOpen = false\n    }\n  }\n})\n\nfunction useActionDispatchers (dispatch) {\n  return useMemo(() => (\n    Object.keys(pickerSlice.actions).reduce((actions, action) => {\n      actions[action] = (...args) => dispatch(pickerSlice.actions[action](...args))\n      return actions\n    }, {})\n  ), [dispatch])\n}\n\nexport function usePickerStore () {\n  const [state, dispatch] = useReducer(pickerSlice.reducer, null, initialState)\n  const dispatchers = useActionDispatchers(dispatch)\n\n  return [state, dispatchers]\n}\n\nexport const ClipboardContext = createContext([{}, {}])\n\nexport function PickerStore ({ children }) {\n  const [state, dispatchers] = usePickerStore()\n\n  return (\n    <ClipboardContext.Provider value={[state, dispatchers]}>\n      {children}\n    </ClipboardContext.Provider>\n  )\n}\n\nexport function withPickerStore (Component) {\n  return props => (\n    <PickerStore>\n      <Component {...props} />\n    </PickerStore>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport extractKeymapData from 'keymap-editor-zmk-backend/lib/extract-keymap-data'\nimport { stripLegacyProperties } from '../../keymap'\n\nexport default function KeymapRaw ({ value, onChange, ...props }) {\n  const [{ raw }, setState] = useState({ raw: value, parsed: null })\n\n  useEffect(() => {\n    setState(state => ({ ...state, raw: value }))\n  }, [value, setState])\n\n  const handleChange = useCallback(event => {\n    const raw = event.target.value\n    setState(state => ({ ...state, raw }))\n  }, [setState])\n\n  useEffect(() => {\n    async function parse () {\n      // debounce? handle errors?\n      const parsed = await extractKeymapData(raw)\n      stripLegacyProperties(parsed)\n      setState(state => ({ ...state, parsed }))\n      onChange({ raw, parsed })\n    }\n\n    if (raw) {\n      parse()\n    }\n  }, [raw, setState, onChange])\n\n  return (\n    <textarea\n      onChange={handleChange}\n      value={raw}\n      {...props}\n    />\n  )\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!./styles.module.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!./styles.module.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useCallback, useContext } from 'react'\n\nimport useToggle from '../../Common/hooks/use-toggle'\nimport Modal from '../../Common/Modal'\nimport DialogBox from '../../Common/DialogBox'\nimport ActionButton from '../../Common/ActionButton'\nimport { GitHubWikiLayoutsLink } from '../../Dialogs/support'\n\nimport { ClipboardContext } from './store'\nimport KeymapRaw from './KeymapRawInput'\nimport styles from './styles.module.css'\n\nexport default function KeymapSourceDialog ({ onSubmit, onCancel }) {\n  const [state, actions] = useContext(ClipboardContext)\n  const { pending } = state\n  const [metadataExpanded, toggleMetadataExpanded] = useToggle(!pending.metadataRaw)\n\n  const handleMetadataChange = useCallback(event => {\n    const raw = event.target.value\n    let parsed = null\n    let errors = null\n\n    try {\n      parsed = JSON.parse(raw)\n    } catch (err) {\n      errors = err\n    }\n\n    actions.setMetadata({ pending: true, raw, parsed, errors })\n  }, [actions])\n\n  const handleKeymapChange = useCallback(({ raw, parsed }) => {\n    actions.setKeymap({ pending: true, raw, parsed })\n  }, [actions])\n\n  const handleSubmit = useCallback(() => {\n    actions.confirmPending()\n    onSubmit({\n      keymap: pending.keymapParsed,\n      metadata: pending.metadataParsed\n    })\n  }, [actions, pending, onSubmit])\n\n  const disabled = (\n    !pending.metadataParsed ||\n    !pending.keymapParsed\n  )\n\n  return (\n    <Modal onDismiss={onCancel}>\n      <DialogBox style={{ maxWidth: '640px', maxHeight: '90vh', overflow: 'auto' }} dismissText={null}>\n        <article className={styles.source} data-expanded={metadataExpanded}>\n          <h2 onClick={toggleMetadataExpanded}>Keyboard{pending.metadataParsed && (\n            <>: <code>{pending.metadataParsed.name}</code></>\n          )}</h2>\n          <section className={styles.sourceContent}>\n            <p>\n              In order to understand what keyboard you're using and now to display\n              it visually, please paste the JSON source metadata file below.\n            </p>\n            {pending.metadataParsed && (\n              <p>Parsed metadata for: {pending.metadataParsed.name}</p>\n            )}\n            <textarea\n              cols={80}\n              rows={pending.metadataParsed ? 22 : 5}\n              wrap=\"off\"\n              spellCheck={false}\n              value={pending.metadataRaw}\n              onChange={handleMetadataChange}\n            />\n            {!pending.metadataParsed && (\n              <div className={styles.metadataHelp}>\n                <h3>Not sure what to put here?</h3>\n                <p>\n                  The <em>Keymap Editor</em> app depends on a defined keyboard\n                  layout both to provide a friendly graphical representation to\n                  edit and a readable textual representation. You can learn more\n                  about this at {GitHubWikiLayoutsLink}.\n                </p>\n                <p>\n                  Note: If your keyboard works with QMK's Configurator you may\n                  be able to quickly get a visual representation by pasting the\n                  contents of that keyboard's <code>info.json</code> file here.\n                </p>\n              </div>\n            )}\n          </section>\n        </article>\n        <h2>Keymap</h2>\n        <p>Paste the devicetree source from your <code>.keymap</code> file below.</p>\n        <p>\n          You can <em>technically</em> make changes directly to the DeviceTree\n          code here, but this isn't intended as an editor.\n        </p>\n        <KeymapRaw\n          cols={80}\n          rows={22}\n          wrap=\"off\"\n          spellCheck={false}\n          value={pending.keymapRaw}\n          onChange={handleKeymapChange}\n        />\n        <p style={{ textAlign: 'center' }}>\n          <ActionButton disabled={disabled} onClick={handleSubmit}>Set Keymap</ActionButton>\n          <ActionButton onClick={onCancel} secondary>Cancel</ActionButton>\n        </p>\n      </DialogBox>\n    </Modal>\n  )\n}\n","import cloneDeep from 'lodash/cloneDeep'\nimport isEqual from 'lodash/isEqual'\nimport { useCallback, useContext, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ClipboardContext } from './store'\n\nimport applyKeymapChanges from 'keymap-editor-zmk-backend/lib/apply-keymap-changes'\nimport extractKeymapData from 'keymap-editor-zmk-backend/lib/extract-keymap-data'\n\nimport styles from './styles.module.css'\nimport { Button } from '../Controls'\nimport Icon from '../../Common/Icon'\nimport { stripLegacyProperties } from '../../keymap'\n\nconst keymapSelector = state => state.keyboard?.keymap\n\nexport default function ClipboardActions () {\n  const [updateNeeded, update] = useKeymapUpdater()\n  const props = { updateNeeded, update }\n\n  return (\n    <>\n      <ModalButton {...props} />\n      <CopyButton {...props} />\n    </>\n  )\n}\n\nexport function useKeymapUpdater () {\n  const appKeymapState = useSelector(keymapSelector)\n  const [state, actions] = useContext(ClipboardContext)\n\n  const updateNeeded = useMemo(() => (\n    appKeymapState &&\n    state.keymapParsed &&\n    !isEqual(appKeymapState, state.keymapParsed)\n  ), [appKeymapState, state.keymapParsed])\n\n  const update = useCallback(async function () {\n    // When opening the clipboard dialog and a previously parsed keymap differs\n    // from the app's current keymap state we're probably wanting to update the\n    // keymap source\n    const { layouts } = state.metadataParsed\n    const preferredLayout = appKeymapState.chosen['zmk,matrix_transform']\n      ? appKeymapState.chosen['zmk,matrix_transform'].replace(/^&/, '')\n      : null\n\n    const defaultLayout = Object.keys(layouts)[0]\n    const { layout } = (\n      layouts[preferredLayout] ||\n      layouts[defaultLayout]\n    )\n\n    const raw = await applyKeymapChanges(layout, cloneDeep(appKeymapState), state.keymapRaw)\n    const parsed = await extractKeymapData(raw)\n    stripLegacyProperties(parsed)\n\n    actions.setKeymap({ raw, parsed })\n    return raw\n  }, [appKeymapState, state, actions])\n\n  return [updateNeeded, update]\n}\n\nexport function ModalButton ({ updateNeeded, update }) {\n  const [{ selectedKeyboard }, { openModal }] = useContext(ClipboardContext)\n  const handleOpenModal = useCallback(async () => {\n    if (updateNeeded) {\n      await update()\n    }\n\n    openModal()\n  }, [openModal, update, updateNeeded])\n\n  if (!selectedKeyboard) {\n    return\n  }\n\n  return (\n    <Button onClick={handleOpenModal} title=\"View/update keymap code\">\n      Keymap\n    </Button>\n  )\n}\n\nexport function CopyButton ({ updateNeeded, update }) {\n  const title = updateNeeded ? 'Copy updated keymap' : 'No changes'\n  const [{ keymapParsed }] = useContext(ClipboardContext)\n  const [isCopiedVisible, showCopied] = useState(false)\n\n  const handleCopy = useCallback(async function () {\n    try {\n      const raw = await update()\n      await navigator.clipboard.writeText(raw)\n      showCopied(true)\n      setTimeout(() => showCopied(false), 1500)\n    } catch (err) {\n      console.error('Clipboard write failed')\n      console.log(err)\n    }\n  }, [update])\n\n  if (!keymapParsed) {\n    return null\n  }\n\n  return (\n    <Button\n      title={title}\n      disabled={!updateNeeded}\n      className={styles.copyButton}\n      onClick={handleCopy}\n      data-show-copied={isCopiedVisible}\n    >\n      <Icon name={updateNeeded ? 'clipboard-list' : 'clipboard-check'} />\n    </Button>\n  )\n}\n","import { useCallback, useContext } from 'react'\n\nimport Icon from '../../Common/Icon'\nimport { ClipboardContext } from './store'\n\nexport default function KeyboardAddButton () {\n  const [, { selectedKeyboard, addKeyboard, openModal }] = useContext(ClipboardContext)\n\n  const handleAddKeyboard = useCallback(() => {\n    const id = Date.now()\n    addKeyboard({ id })\n    selectedKeyboard({ keyboard: id })\n    openModal()\n  }, [addKeyboard, selectedKeyboard, openModal])\n\n  return (\n    <button onClick={handleAddKeyboard}>\n      <Icon name=\"gear\" /> Add Keyboard\n    </button>\n  )\n}\n","import { useCallback, useContext, useMemo } from 'react'\n\nimport { Select } from '../Controls'\nimport { ClipboardContext } from './store'\nimport KeyboardAddButton from './KeyboardAddButton'\n\nexport default function KeyboardSelector () {\n  const [{ keyboards, selectedKeyboard: selectedKeyboardId }, { selectedKeyboard }] = useContext(ClipboardContext)\n\n  const selectedKeyboardChoice = useMemo(() => (\n    keyboards.find(keyboard => keyboard.id === selectedKeyboardId)\n  ), [keyboards, selectedKeyboardId])\n\n  const handleSelectKeyboard = useCallback(choice => {\n    selectedKeyboard({ keyboard: choice.id })\n  }, [selectedKeyboard])\n\n  if (keyboards.length === 0) {\n    return <KeyboardAddButton />\n  }\n\n  return (\n    <Select\n      value={selectedKeyboardChoice}\n      options={keyboards}\n      onChange={handleSelectKeyboard}\n      getOptionLabel={option => option.name || '<unnamed>'}\n      getOptionValue={option => option.id}\n      formatOptionLabel={option => option.name || <em>[unnamed]</em>}\n    >\n      <KeyboardAddButton />\n    </Select>\n  )\n}\n","import cloneDeep from 'lodash/cloneDeep'\nimport { useCallback, useContext, useEffect, useState } from 'react'\n\nimport { ClipboardContext, withPickerStore } from './store'\nimport KeymapSourceDialog from './KeymapSourceDialog'\nimport ClipboardActions from './ClipboardActions'\nimport KeyboardSelector from './KeyboardSelector'\n\nexport function ClipboardPicker ({ onSelect, onError }) {\n  const [state, { closeModal }] = useContext(ClipboardContext)\n  const [initState, setInitState] = useState(null)\n\n  const selectKeymap = useCallback((keymap, metadata) => {\n    const { layouts } = metadata\n    const preferredLayout = keymap.chosen['zmk,matrix_transform']\n      ? keymap.chosen['zmk,matrix_transform'].replace(/^&/, '')\n      : null\n\n    const defaultLayout = Object.keys(layouts)[0]\n    const layoutMetadata = (\n      layouts[preferredLayout] ||\n      layouts[defaultLayout]\n    )\n\n    onSelect(cloneDeep({\n      source: 'clipboard',\n      keyboard: '',\n      layoutMetadata,\n      layout: layoutMetadata.layout,\n      keymap,\n      sensors: layoutMetadata.sensors || []\n    }))\n  }, [onSelect])\n\n  useEffect(() => {\n    if (state.keymapParsed && state.metadataParsed) {\n      selectKeymap(state.keymapParsed, state.metadataParsed)\n    }\n  }, [selectKeymap, state.keymapParsed, state.metadataParsed])\n\n  const handleSelectKeymap = useCallback(({ keymap, metadata }) => {\n    selectKeymap(keymap, metadata)\n    closeModal()\n  }, [selectKeymap, closeModal])\n\n  useEffect(() => {\n    if (initState) {\n      return\n    }\n\n    setInitState(true)\n\n    if (state.keymapParsed && state.metadataParsed) {\n      selectKeymap(state.keymapParsed, state.metadataParsed)\n    }\n  }, [initState, setInitState, selectKeymap, state])\n\n  return (\n    <>\n      <KeyboardSelector />\n      <ClipboardActions />\n      {state.modalOpen && (\n        <KeymapSourceDialog\n          onSubmit={handleSelectKeymap}\n          onCancel={closeModal}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withPickerStore(ClipboardPicker)\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"button.pi2Ig8c3Fdh4H2Jpxdo7 {\\n  display: inline-block;\\n  cursor: pointer;\\n  background-color: var(--hover-selection);\\n  color: white;\\n\\n  font-size: 16px;\\n  border: none;\\n  border-radius: 5px;\\n  padding: 0 5px;\\n\\n  height: 30px;\\n  line-height: 30px;\\n  vertical-align: middle;\\n}\\n\\nbutton.Ctpu4E2dZYJ6g8CUGFOF {\\n  color: var(--fg);\\n  background-color: transparent;\\n}\\n\\nbutton.pi2Ig8c3Fdh4H2Jpxdo7[disabled] {\\n  filter: saturate(20%);\\n  opacity: .5;\\n  cursor: not-allowed;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Common/action-button.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB;EACrB,eAAe;EACf,wCAAwC;EACxC,YAAY;;EAEZ,eAAe;EACf,YAAY;EACZ,kBAAkB;EAClB,cAAc;;EAEd,YAAY;EACZ,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,mBAAmB;AACrB\",\"sourcesContent\":[\"button.action {\\n  display: inline-block;\\n  cursor: pointer;\\n  background-color: var(--hover-selection);\\n  color: white;\\n\\n  font-size: 16px;\\n  border: none;\\n  border-radius: 5px;\\n  padding: 0 5px;\\n\\n  height: 30px;\\n  line-height: 30px;\\n  vertical-align: middle;\\n}\\n\\nbutton.secondary {\\n  color: var(--fg);\\n  background-color: transparent;\\n}\\n\\nbutton.action[disabled] {\\n  filter: saturate(20%);\\n  opacity: .5;\\n  cursor: not-allowed;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"action\": \"pi2Ig8c3Fdh4H2Jpxdo7\",\n\t\"secondary\": \"Ctpu4E2dZYJ6g8CUGFOF\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fnnwBtqwiwSQgnuN5sqg h2 {\\n  cursor: pointer;\\n}\\n\\n.meN56P3rXkTYWdDY0oZq {\\n  height: auto;\\n  transition: height 100ms ease-out;\\n}\\n\\n.H4OUxP43w5pZ9RYBB72x {\\n  background-color: rgba(0, 0, 0, 0.1);\\n  margin: 10px;\\n  padding: 0 10px;\\n  border-radius: 4px;\\n}\\n\\n[data-expanded=\\\"false\\\"] .meN56P3rXkTYWdDY0oZq {\\n  height: 0;\\n  overflow: hidden;\\n}\\n\\n[data-expanded=\\\"false\\\"] h2 {\\n  margin-bottom: 0;\\n}\\n\\n.eVrbmh_w8MbnDUOfUD2N {\\n  position: relative;\\n}\\n.eVrbmh_w8MbnDUOfUD2N span {\\n  font-size: 120%;\\n  margin: auto 5px;\\n}\\n\\n.eVrbmh_w8MbnDUOfUD2N[data-show-copied=\\\"true\\\"]::after {\\n  content: \\\"Copied!\\\";\\n  position: absolute;\\n  right: -5px;\\n  top: 50%;\\n\\n  transform: translate(100%, -50%);\\n  background-color: var(--selection);\\n  color: white;\\n  padding: 10px;\\n  border-radius: 4px;\\n\\n  animation: normal 1.5s h0IIQBfKFzrLn6r9v5qG;\\n}\\n\\n@keyframes h0IIQBfKFzrLn6r9v5qG {\\n  0% { opacity: 0; width: 0; margin-left: -100%; }\\n  2.5% { opacity: 1; width: auto; }\\n  75% { opacity: 1; margin-left: 0; }\\n  100% { opacity: 0; }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Sources/Clipboard/styles.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,YAAY;EACZ,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;EACX,QAAQ;;EAER,gCAAgC;EAChC,kCAAkC;EAClC,YAAY;EACZ,aAAa;EACb,kBAAkB;;EAElB,2CAA+B;AACjC;;AAEA;EACE,KAAK,UAAU,EAAE,QAAQ,EAAE,kBAAkB,EAAE;EAC/C,OAAO,UAAU,EAAE,WAAW,EAAE;EAChC,MAAM,UAAU,EAAE,cAAc,EAAE;EAClC,OAAO,UAAU,EAAE;AACrB\",\"sourcesContent\":[\".source h2 {\\n  cursor: pointer;\\n}\\n\\n.sourceContent {\\n  height: auto;\\n  transition: height 100ms ease-out;\\n}\\n\\n.metadataHelp {\\n  background-color: rgba(0, 0, 0, 0.1);\\n  margin: 10px;\\n  padding: 0 10px;\\n  border-radius: 4px;\\n}\\n\\n[data-expanded=\\\"false\\\"] .sourceContent {\\n  height: 0;\\n  overflow: hidden;\\n}\\n\\n[data-expanded=\\\"false\\\"] h2 {\\n  margin-bottom: 0;\\n}\\n\\n.copyButton {\\n  position: relative;\\n}\\n.copyButton span {\\n  font-size: 120%;\\n  margin: auto 5px;\\n}\\n\\n.copyButton[data-show-copied=\\\"true\\\"]::after {\\n  content: \\\"Copied!\\\";\\n  position: absolute;\\n  right: -5px;\\n  top: 50%;\\n\\n  transform: translate(100%, -50%);\\n  background-color: var(--selection);\\n  color: white;\\n  padding: 10px;\\n  border-radius: 4px;\\n\\n  animation: normal 1.5s popInOut;\\n}\\n\\n@keyframes popInOut {\\n  0% { opacity: 0; width: 0; margin-left: -100%; }\\n  2.5% { opacity: 1; width: auto; }\\n  75% { opacity: 1; margin-left: 0; }\\n  100% { opacity: 0; }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"source\": \"fnnwBtqwiwSQgnuN5sqg\",\n\t\"sourceContent\": \"meN56P3rXkTYWdDY0oZq\",\n\t\"metadataHelp\": \"H4OUxP43w5pZ9RYBB72x\",\n\t\"copyButton\": \"eVrbmh_w8MbnDUOfUD2N\",\n\t\"popInOut\": \"h0IIQBfKFzrLn6r9v5qG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","ActionButton","children","secondary","className","props","styles","join","defaultProps","STORAGE_KEY_KEYBOARDS","STORAGE_KEY_KEYBOARD","STORAGE_KEY_SELECTED_KEYBOARD","BLANK_KEYBOARD_ENTRY","JSON","stringify","keymapRaw","keymapParsed","metadataRaw","metadataParsed","initialState","storedKeyboardId","parse","localStorage","getItem","INITIAL_KEYBOARDS","INITIAL_KEYBOARD_ID","id","INITIAL_KEYBOARD_DATA","INITIAL_KEYMAP_RAW","INITIAL_KEYMAP_PARSED","INITIAL_METADATA_RAW","INITIAL_METADATA_PARSED","keyboards","selectedKeyboard","modalOpen","pending","pickerSlice","createSlice","name","reducers","state","action","payload","keyboard","key","setItem","addKeyboard","push","setKeymap","raw","parsed","setMetadata","target","confirmPending","find","openModal","closeModal","ClipboardContext","createContext","PickerStore","dispatch","useReducer","reducer","dispatchers","useMemo","Object","keys","actions","reduce","usePickerStore","Provider","value","KeymapRaw","onChange","useState","setState","useEffect","handleChange","useCallback","event","extractKeymapData","stripLegacyProperties","KeymapSourceDialog","onSubmit","onCancel","useContext","useToggle","metadataExpanded","toggleMetadataExpanded","handleMetadataChange","errors","err","handleKeymapChange","handleSubmit","keymap","metadata","disabled","Modal","onDismiss","DialogBox","style","maxWidth","maxHeight","overflow","dismissText","onClick","cols","rows","wrap","spellCheck","GitHubWikiLayoutsLink","textAlign","i","keymapSelector","ClipboardActions","appKeymapState","useSelector","isEqual","layouts","preferredLayout","chosen","replace","defaultLayout","layout","applyKeymapChanges","cloneDeep","updateNeeded","update","ModalButton","CopyButton","handleOpenModal","title","isCopiedVisible","showCopied","handleCopy","navigator","clipboard","writeText","setTimeout","console","error","log","Icon","KeyboardAddButton","handleAddKeyboard","Date","now","KeyboardSelector","selectedKeyboardId","selectedKeyboardChoice","handleSelectKeyboard","choice","length","getOptionLabel","option","getOptionValue","formatOptionLabel","ClipboardPicker","onSelect","onError","initState","setInitState","selectKeymap","layoutMetadata","source","sensors","handleSelectKeymap","Component","___CSS_LOADER_EXPORT___","module","locals"],"sourceRoot":""}