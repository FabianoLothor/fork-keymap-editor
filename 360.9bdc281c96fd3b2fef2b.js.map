{"version":3,"file":"360.9bdc281c96fd3b2fef2b.js","mappings":"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","sources":["webpack:///./node_modules/fuzzysort/fuzzysort.js"],"sourcesContent":["/*\r\n  fuzzysort.js https://github.com/farzher/fuzzysort\r\n  SublimeText-like Fuzzy Search\r\n\r\n  fuzzysort.single('fs', 'Fuzzy Search') // {score: -16}\r\n  fuzzysort.single('test', 'test') // {score: 0}\r\n  fuzzysort.single('doesnt exist', 'target') // null\r\n\r\n  fuzzysort.go('mr', [{file:'Monitor.cpp'}, {file:'MeshRenderer.cpp'}], {key:'file'})\r\n  // [{score:-18, obj:{file:'MeshRenderer.cpp'}}, {score:-6009, obj:{file:'Monitor.cpp'}}]\r\n\r\n  fuzzysort.go('mr', ['Monitor.cpp', 'MeshRenderer.cpp'])\r\n  // [{score: -18, target: \"MeshRenderer.cpp\"}, {score: -6009, target: \"Monitor.cpp\"}]\r\n\r\n  fuzzysort.highlight(fuzzysort.single('fs', 'Fuzzy Search'), '<b>', '</b>')\r\n  // <b>F</b>uzzy <b>S</b>earch\r\n*/\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;(function(root, UMD) {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root.fuzzysort = UMD()\r\n})(this, function UMD() { function fuzzysortNew(instanceOptions) {\r\n\r\n  var fuzzysort = {\r\n\r\n    single: function(search, target, options) {                                                                                                                                                                                                               ;if(search=='farzher')return{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6]}\r\n      if(!search) return null\r\n      if(!isObj(search)) search = fuzzysort.getPreparedSearch(search)\r\n\r\n      if(!target) return null\r\n      if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n      var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n        : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n        : true\r\n      var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n      return algorithm(search, target, search[0])\r\n    },\r\n\r\n    go: function(search, targets, options) {                                                                                                                                                                                                                  ;if(search=='farzher')return[{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6],obj:targets?targets[0]:null}]\r\n      if(!search) return noResults\r\n      search = fuzzysort.prepareSearch(search)\r\n      var searchLowerCode = search[0]\r\n\r\n      var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n      var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n      var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n        : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n        : true\r\n      var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n      var resultsLen = 0; var limitedCount = 0\r\n      var targetsLen = targets.length\r\n\r\n      // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n      // options.keys\r\n      if(options && options.keys) {\r\n        var scoreFn = options.scoreFn || defaultScoreFn\r\n        var keys = options.keys\r\n        var keysLen = keys.length\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n          var objResults = new Array(keysLen)\r\n          for (var keyI = keysLen - 1; keyI >= 0; --keyI) {\r\n            var key = keys[keyI]\r\n            var target = getValue(obj, key)\r\n            if(!target) { objResults[keyI] = null; continue }\r\n            if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n            objResults[keyI] = algorithm(search, target, searchLowerCode)\r\n          }\r\n          objResults.obj = obj // before scoreFn so scoreFn can use it\r\n          var score = scoreFn(objResults)\r\n          if(score === null) continue\r\n          if(score < threshold) continue\r\n          objResults.score = score\r\n          if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(score > q.peek().score) q.replaceTop(objResults)\r\n          }\r\n        }\r\n\r\n      // options.key\r\n      } else if(options && options.key) {\r\n        var key = options.key\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var obj = targets[i]\r\n          var target = getValue(obj, key)\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n          var result = algorithm(search, target, searchLowerCode)\r\n          if(result === null) continue\r\n          if(result.score < threshold) continue\r\n\r\n          // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n          result = {target:result.target, _targetLowerCodes:null, _nextBeginningIndexes:null, score:result.score, indexes:result.indexes, obj:obj} // hidden\r\n\r\n          if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(result.score > q.peek().score) q.replaceTop(result)\r\n          }\r\n        }\r\n\r\n      // no keys\r\n      } else {\r\n        for(var i = targetsLen - 1; i >= 0; --i) { var target = targets[i]\r\n          if(!target) continue\r\n          if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n          var result = algorithm(search, target, searchLowerCode)\r\n          if(result === null) continue\r\n          if(result.score < threshold) continue\r\n          if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n          else {\r\n            ++limitedCount\r\n            if(result.score > q.peek().score) q.replaceTop(result)\r\n          }\r\n        }\r\n      }\r\n\r\n      if(resultsLen === 0) return noResults\r\n      var results = new Array(resultsLen)\r\n      for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n      results.total = resultsLen + limitedCount\r\n      return results\r\n    },\r\n\r\n    goAsync: function(search, targets, options) {\r\n      var canceled = false\r\n      var p = new Promise(function(resolve, reject) {                                                                                                                                                                                                         ;if(search=='farzher')return resolve([{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6],obj:targets?targets[0]:null}])\r\n        if(!search) return resolve(noResults)\r\n        search = fuzzysort.prepareSearch(search)\r\n        var searchLowerCode = search[0]\r\n\r\n        var q = fastpriorityqueue()\r\n        var iCurrent = targets.length - 1\r\n        var threshold = options && options.threshold || instanceOptions && instanceOptions.threshold || -9007199254740991\r\n        var limit = options && options.limit || instanceOptions && instanceOptions.limit || 9007199254740991\r\n        var allowTypo = options && options.allowTypo!==undefined ? options.allowTypo\r\n          : instanceOptions && instanceOptions.allowTypo!==undefined ? instanceOptions.allowTypo\r\n          : true\r\n        var algorithm = allowTypo ? fuzzysort.algorithm : fuzzysort.algorithmNoTypo\r\n        var resultsLen = 0; var limitedCount = 0\r\n        function step() {\r\n          if(canceled) return reject('canceled')\r\n\r\n          var startMs = Date.now()\r\n\r\n          // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n          // options.keys\r\n          if(options && options.keys) {\r\n            var scoreFn = options.scoreFn || defaultScoreFn\r\n            var keys = options.keys\r\n            var keysLen = keys.length\r\n            for(; iCurrent >= 0; --iCurrent) {\r\n              if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                  isNode?setImmediate(step):setTimeout(step)\r\n                  return\r\n                }\r\n              }\r\n\r\n              var obj = targets[iCurrent]\r\n              var objResults = new Array(keysLen)\r\n              for (var keyI = keysLen - 1; keyI >= 0; --keyI) {\r\n                var key = keys[keyI]\r\n                var target = getValue(obj, key)\r\n                if(!target) { objResults[keyI] = null; continue }\r\n                if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n                objResults[keyI] = algorithm(search, target, searchLowerCode)\r\n              }\r\n              objResults.obj = obj // before scoreFn so scoreFn can use it\r\n              var score = scoreFn(objResults)\r\n              if(score === null) continue\r\n              if(score < threshold) continue\r\n              objResults.score = score\r\n              if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n              else {\r\n                ++limitedCount\r\n                if(score > q.peek().score) q.replaceTop(objResults)\r\n              }\r\n            }\r\n\r\n          // options.key\r\n          } else if(options && options.key) {\r\n            var key = options.key\r\n            for(; iCurrent >= 0; --iCurrent) {\r\n              if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                  isNode?setImmediate(step):setTimeout(step)\r\n                  return\r\n                }\r\n              }\r\n\r\n              var obj = targets[iCurrent]\r\n              var target = getValue(obj, key)\r\n              if(!target) continue\r\n              if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n              var result = algorithm(search, target, searchLowerCode)\r\n              if(result === null) continue\r\n              if(result.score < threshold) continue\r\n\r\n              // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n              result = {target:result.target, _targetLowerCodes:null, _nextBeginningIndexes:null, score:result.score, indexes:result.indexes, obj:obj} // hidden\r\n\r\n              if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n              else {\r\n                ++limitedCount\r\n                if(result.score > q.peek().score) q.replaceTop(result)\r\n              }\r\n            }\r\n\r\n          // no keys\r\n          } else {\r\n            for(; iCurrent >= 0; --iCurrent) {\r\n              if(iCurrent%1000/*itemsPerCheck*/ === 0) {\r\n                if(Date.now() - startMs >= 10/*asyncInterval*/) {\r\n                  isNode?setImmediate(step):setTimeout(step)\r\n                  return\r\n                }\r\n              }\r\n\r\n              var target = targets[iCurrent]\r\n              if(!target) continue\r\n              if(!isObj(target)) target = fuzzysort.getPrepared(target)\r\n\r\n              var result = algorithm(search, target, searchLowerCode)\r\n              if(result === null) continue\r\n              if(result.score < threshold) continue\r\n              if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n              else {\r\n                ++limitedCount\r\n                if(result.score > q.peek().score) q.replaceTop(result)\r\n              }\r\n            }\r\n          }\r\n\r\n          if(resultsLen === 0) return resolve(noResults)\r\n          var results = new Array(resultsLen)\r\n          for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n          results.total = resultsLen + limitedCount\r\n          resolve(results)\r\n        }\r\n\r\n        isNode?setImmediate(step):step() //setTimeout here is too slow\r\n      })\r\n      p.cancel = function() { canceled = true }\r\n      return p\r\n    },\r\n\r\n    highlight: function(result, hOpen, hClose) {\r\n      if(typeof hOpen == 'function') return fuzzysort.highlightCallback(result, hOpen)\r\n      if(result === null) return null\r\n      if(hOpen === undefined) hOpen = '<b>'\r\n      if(hClose === undefined) hClose = '</b>'\r\n      var highlighted = ''\r\n      var matchesIndex = 0\r\n      var opened = false\r\n      var target = result.target\r\n      var targetLen = target.length\r\n      var matchesBest = result.indexes\r\n      for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n        if(matchesBest[matchesIndex] === i) {\r\n          ++matchesIndex\r\n          if(!opened) { opened = true\r\n            highlighted += hOpen\r\n          }\r\n\r\n          if(matchesIndex === matchesBest.length) {\r\n            highlighted += char + hClose + target.substr(i+1)\r\n            break\r\n          }\r\n        } else {\r\n          if(opened) { opened = false\r\n            highlighted += hClose\r\n          }\r\n        }\r\n        highlighted += char\r\n      }\r\n\r\n      return highlighted\r\n    },\r\n    highlightCallback: function(result, cb) {\r\n      if(result === null) return null\r\n      var target = result.target\r\n      var targetLen = target.length\r\n      var indexes = result.indexes\r\n      var highlighted = ''\r\n      var matchI = 0\r\n      var indexesI = 0\r\n      var opened = false\r\n      var result = []\r\n      for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n        if(indexes[indexesI] === i) {\r\n          ++indexesI\r\n          if(!opened) { opened = true\r\n            result.push(highlighted); highlighted = ''\r\n          }\r\n\r\n          if(indexesI === indexes.length) {\r\n            highlighted += char\r\n            result.push(cb(highlighted, matchI++)); highlighted = ''\r\n            result.push(target.substr(i+1))\r\n            break\r\n          }\r\n        } else {\r\n          if(opened) { opened = false\r\n            result.push(cb(highlighted, matchI++)); highlighted = ''\r\n          }\r\n        }\r\n        highlighted += char\r\n      }\r\n      return result\r\n    },\r\n\r\n    prepare: function(target) {\r\n      if(!target) return {target: '', _targetLowerCodes: [0/*this 0 doesn't make sense. here because an empty array causes the algorithm to deoptimize and run 50% slower!*/], _nextBeginningIndexes: null, score: null, indexes: null, obj: null} // hidden\r\n      return {target:target, _targetLowerCodes:fuzzysort.prepareLowerCodes(target), _nextBeginningIndexes:null, score:null, indexes:null, obj:null} // hidden\r\n    },\r\n    prepareSlow: function(target) {\r\n      if(!target) return {target: '', _targetLowerCodes: [0/*this 0 doesn't make sense. here because an empty array causes the algorithm to deoptimize and run 50% slower!*/], _nextBeginningIndexes: null, score: null, indexes: null, obj: null} // hidden\r\n      return {target:target, _targetLowerCodes:fuzzysort.prepareLowerCodes(target), _nextBeginningIndexes:fuzzysort.prepareNextBeginningIndexes(target), score:null, indexes:null, obj:null} // hidden\r\n    },\r\n    prepareSearch: function(search) {\r\n      if(!search) search = ''\r\n      return fuzzysort.prepareLowerCodes(search)\r\n    },\r\n\r\n\r\n\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n    // Below this point is only internal code\r\n\r\n\r\n\r\n    getPrepared: function(target) {\r\n      if(target.length > 999) return fuzzysort.prepare(target) // don't cache huge targets\r\n      var targetPrepared = preparedCache.get(target)\r\n      if(targetPrepared !== undefined) return targetPrepared\r\n      targetPrepared = fuzzysort.prepare(target)\r\n      preparedCache.set(target, targetPrepared)\r\n      return targetPrepared\r\n    },\r\n    getPreparedSearch: function(search) {\r\n      if(search.length > 999) return fuzzysort.prepareSearch(search) // don't cache huge searches\r\n      var searchPrepared = preparedSearchCache.get(search)\r\n      if(searchPrepared !== undefined) return searchPrepared\r\n      searchPrepared = fuzzysort.prepareSearch(search)\r\n      preparedSearchCache.set(search, searchPrepared)\r\n      return searchPrepared\r\n    },\r\n\r\n    algorithm: function(searchLowerCodes, prepared, searchLowerCode) {\r\n      var targetLowerCodes = prepared._targetLowerCodes\r\n      var searchLen = searchLowerCodes.length\r\n      var targetLen = targetLowerCodes.length\r\n      var searchI = 0 // where we at\r\n      var targetI = 0 // where you at\r\n      var typoSimpleI = 0\r\n      var matchesSimpleLen = 0\r\n\r\n      // very basic fuzzy match; to remove non-matching targets ASAP!\r\n      // walk through target. find sequential matches.\r\n      // if all chars aren't found then exit\r\n      for(;;) {\r\n        var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesSimple[matchesSimpleLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) break\r\n          searchLowerCode = searchLowerCodes[typoSimpleI===0?searchI : (typoSimpleI===searchI?searchI+1 : (typoSimpleI===searchI-1?searchI-1 : searchI))]\r\n        }\r\n\r\n        ++targetI; if(targetI >= targetLen) { // Failed to find searchI\r\n          // Check for typo or exit\r\n          // we go as far as possible before trying to transpose\r\n          // then we transpose backwards until we reach the beginning\r\n          for(;;) {\r\n            if(searchI <= 1) return null // not allowed to transpose first char\r\n            if(typoSimpleI === 0) { // we haven't tried to transpose yet\r\n              --searchI\r\n              var searchLowerCodeNew = searchLowerCodes[searchI]\r\n              if(searchLowerCode === searchLowerCodeNew) continue // doesn't make sense to transpose a repeat char\r\n              typoSimpleI = searchI\r\n            } else {\r\n              if(typoSimpleI === 1) return null // reached the end of the line for transposing\r\n              --typoSimpleI\r\n              searchI = typoSimpleI\r\n              searchLowerCode = searchLowerCodes[searchI + 1]\r\n              var searchLowerCodeNew = searchLowerCodes[searchI]\r\n              if(searchLowerCode === searchLowerCodeNew) continue // doesn't make sense to transpose a repeat char\r\n            }\r\n            matchesSimpleLen = searchI\r\n            targetI = matchesSimple[matchesSimpleLen - 1] + 1\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      var searchI = 0\r\n      var typoStrictI = 0\r\n      var successStrict = false\r\n      var matchesStrictLen = 0\r\n\r\n      var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n      if(nextBeginningIndexes === null) nextBeginningIndexes = prepared._nextBeginningIndexes = fuzzysort.prepareNextBeginningIndexes(prepared.target)\r\n      var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n      // Our target string successfully matched all characters in sequence!\r\n      // Let's try a more advanced and strict test to improve the score\r\n      // only count it as a match if it's consecutive or a beginning character!\r\n      if(targetI !== targetLen) for(;;) {\r\n        if(targetI >= targetLen) {\r\n          // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n          if(searchI <= 0) { // We failed to push chars forward for a better match\r\n            // transpose, starting from the beginning\r\n            ++typoStrictI; if(typoStrictI > searchLen-2) break\r\n            if(searchLowerCodes[typoStrictI] === searchLowerCodes[typoStrictI+1]) continue // doesn't make sense to transpose a repeat char\r\n            targetI = firstPossibleI\r\n            continue\r\n          }\r\n\r\n          --searchI\r\n          var lastMatch = matchesStrict[--matchesStrictLen]\r\n          targetI = nextBeginningIndexes[lastMatch]\r\n\r\n        } else {\r\n          var isMatch = searchLowerCodes[typoStrictI===0?searchI : (typoStrictI===searchI?searchI+1 : (typoStrictI===searchI-1?searchI-1 : searchI))] === targetLowerCodes[targetI]\r\n          if(isMatch) {\r\n            matchesStrict[matchesStrictLen++] = targetI\r\n            ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n            ++targetI\r\n          } else {\r\n            targetI = nextBeginningIndexes[targetI]\r\n          }\r\n        }\r\n      }\r\n\r\n      { // tally up the score & keep track of matches for highlighting later\r\n        if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n        else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n        var score = 0\r\n        var lastTargetI = -1\r\n        for(var i = 0; i < searchLen; ++i) { var targetI = matchesBest[i]\r\n          // score only goes down if they're not consecutive\r\n          if(lastTargetI !== targetI - 1) score -= targetI\r\n          lastTargetI = targetI\r\n        }\r\n        if(!successStrict) {\r\n          score *= 1000\r\n          if(typoSimpleI !== 0) score += -20/*typoPenalty*/\r\n        } else {\r\n          if(typoStrictI !== 0) score += -20/*typoPenalty*/\r\n        }\r\n        score -= targetLen - searchLen\r\n        prepared.score = score\r\n        prepared.indexes = new Array(matchesBestLen); for(var i = matchesBestLen - 1; i >= 0; --i) prepared.indexes[i] = matchesBest[i]\r\n\r\n        return prepared\r\n      }\r\n    },\r\n\r\n    algorithmNoTypo: function(searchLowerCodes, prepared, searchLowerCode) {\r\n      var targetLowerCodes = prepared._targetLowerCodes\r\n      var searchLen = searchLowerCodes.length\r\n      var targetLen = targetLowerCodes.length\r\n      var searchI = 0 // where we at\r\n      var targetI = 0 // where you at\r\n      var matchesSimpleLen = 0\r\n\r\n      // very basic fuzzy match; to remove non-matching targets ASAP!\r\n      // walk through target. find sequential matches.\r\n      // if all chars aren't found then exit\r\n      for(;;) {\r\n        var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesSimple[matchesSimpleLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) break\r\n          searchLowerCode = searchLowerCodes[searchI]\r\n        }\r\n        ++targetI; if(targetI >= targetLen) return null // Failed to find searchI\r\n      }\r\n\r\n      var searchI = 0\r\n      var successStrict = false\r\n      var matchesStrictLen = 0\r\n\r\n      var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n      if(nextBeginningIndexes === null) nextBeginningIndexes = prepared._nextBeginningIndexes = fuzzysort.prepareNextBeginningIndexes(prepared.target)\r\n      var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n      // Our target string successfully matched all characters in sequence!\r\n      // Let's try a more advanced and strict test to improve the score\r\n      // only count it as a match if it's consecutive or a beginning character!\r\n      if(targetI !== targetLen) for(;;) {\r\n        if(targetI >= targetLen) {\r\n          // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n          if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n          --searchI\r\n          var lastMatch = matchesStrict[--matchesStrictLen]\r\n          targetI = nextBeginningIndexes[lastMatch]\r\n\r\n        } else {\r\n          var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n          if(isMatch) {\r\n            matchesStrict[matchesStrictLen++] = targetI\r\n            ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n            ++targetI\r\n          } else {\r\n            targetI = nextBeginningIndexes[targetI]\r\n          }\r\n        }\r\n      }\r\n\r\n      { // tally up the score & keep track of matches for highlighting later\r\n        if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n        else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n        var score = 0\r\n        var lastTargetI = -1\r\n        for(var i = 0; i < searchLen; ++i) { var targetI = matchesBest[i]\r\n          // score only goes down if they're not consecutive\r\n          if(lastTargetI !== targetI - 1) score -= targetI\r\n          lastTargetI = targetI\r\n        }\r\n        if(!successStrict) score *= 1000\r\n        score -= targetLen - searchLen\r\n        prepared.score = score\r\n        prepared.indexes = new Array(matchesBestLen); for(var i = matchesBestLen - 1; i >= 0; --i) prepared.indexes[i] = matchesBest[i]\r\n\r\n        return prepared\r\n      }\r\n    },\r\n\r\n    prepareLowerCodes: function(str) {\r\n      var strLen = str.length\r\n      var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n      var lower = str.toLowerCase()\r\n      for(var i = 0; i < strLen; ++i) lowerCodes[i] = lower.charCodeAt(i)\r\n      return lowerCodes\r\n    },\r\n    prepareBeginningIndexes: function(target) {\r\n      var targetLen = target.length\r\n      var beginningIndexes = []; var beginningIndexesLen = 0\r\n      var wasUpper = false\r\n      var wasAlphanum = false\r\n      for(var i = 0; i < targetLen; ++i) {\r\n        var targetCode = target.charCodeAt(i)\r\n        var isUpper = targetCode>=65&&targetCode<=90\r\n        var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n        var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n        wasUpper = isUpper\r\n        wasAlphanum = isAlphanum\r\n        if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n      }\r\n      return beginningIndexes\r\n    },\r\n    prepareNextBeginningIndexes: function(target) {\r\n      var targetLen = target.length\r\n      var beginningIndexes = fuzzysort.prepareBeginningIndexes(target)\r\n      var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n      var lastIsBeginning = beginningIndexes[0]\r\n      var lastIsBeginningI = 0\r\n      for(var i = 0; i < targetLen; ++i) {\r\n        if(lastIsBeginning > i) {\r\n          nextBeginningIndexes[i] = lastIsBeginning\r\n        } else {\r\n          lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n          nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n        }\r\n      }\r\n      return nextBeginningIndexes\r\n    },\r\n\r\n    cleanup: cleanup,\r\n    new: fuzzysortNew,\r\n  }\r\n  return fuzzysort\r\n} // fuzzysortNew\r\n\r\n// This stuff is outside fuzzysortNew, because it's shared with instances of fuzzysort.new()\r\nvar isNode = typeof require !== 'undefined' && typeof window === 'undefined'\r\nvar MyMap = typeof Map === 'function' ? Map : function(){var s=Object.create(null);this.get=function(k){return s[k]};this.set=function(k,val){s[k]=val;return this};this.clear=function(){s=Object.create(null)}}\r\nvar preparedCache = new MyMap()\r\nvar preparedSearchCache = new MyMap()\r\nvar noResults = []; noResults.total = 0\r\nvar matchesSimple = []; var matchesStrict = []\r\nfunction cleanup() { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = [] }\r\nfunction defaultScoreFn(a) {\r\n  var max = -9007199254740991\r\n  for (var i = a.length - 1; i >= 0; --i) {\r\n    var result = a[i]; if(result === null) continue\r\n    var score = result.score\r\n    if(score > max) max = score\r\n  }\r\n  if(max === -9007199254740991) return null\r\n  return max\r\n}\r\n\r\n// prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n// prop = 'key1.key2'        10ms\r\n// prop = ['key1', 'key2']   27ms\r\nfunction getValue(obj, prop) {\r\n  var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n  var segs = prop\r\n  if(!Array.isArray(prop)) segs = prop.split('.')\r\n  var len = segs.length\r\n  var i = -1\r\n  while (obj && (++i < len)) obj = obj[segs[i]]\r\n  return obj\r\n}\r\n\r\nfunction isObj(x) { return typeof x === 'object' } // faster as a function\r\n\r\n// Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\nvar fastpriorityqueue=function(){var r=[],o=0,e={};function n(){for(var e=0,n=r[e],c=1;c<o;){var f=c+1;e=c,f<o&&r[f].score<r[c].score&&(e=f),r[e-1>>1]=r[e],c=1+(e<<1)}for(var a=e-1>>1;e>0&&n.score<r[a].score;a=(e=a)-1>>1)r[e]=r[a];r[e]=n}return e.add=function(e){var n=o;r[o++]=e;for(var c=n-1>>1;n>0&&e.score<r[c].score;c=(n=c)-1>>1)r[n]=r[c];r[n]=e},e.poll=function(){if(0!==o){var e=r[0];return r[0]=r[--o],n(),e}},e.peek=function(e){if(0!==o)return r[0]},e.replaceTop=function(o){r[0]=o,n()},e};\r\nvar q = fastpriorityqueue() // reuse this, except for async, it needs to make its own\r\n\r\nreturn fuzzysortNew()\r\n}) // UMD\r\n\r\n// TODO: (performance) wasm version!?\r\n// TODO: (performance) threads?\r\n// TODO: (performance) avoid cache misses\r\n// TODO: (performance) preparedCache is a memory leak\r\n// TODO: (like sublime) backslash === forwardslash\r\n// TODO: (like sublime) spaces: \"a b\" should do 2 searches 1 for a and 1 for b\r\n// TODO: (scoring) garbage in targets that allows most searches to strict match need a penality\r\n// TODO: (performance) idk if allowTypo is optimized\r\n"],"names":["isNode","window","MyMap","Map","s","Object","create","this","get","k","set","val","clear","preparedCache","preparedSearchCache","noResults","total","matchesSimple","matchesStrict","cleanup","defaultScoreFn","a","max","i","length","result","score","getValue","obj","prop","tmp","undefined","segs","Array","isArray","split","len","isObj","x","fastpriorityqueue","r","o","e","n","c","f","add","poll","peek","replaceTop","q","fuzzysortNew","instanceOptions","fuzzysort","single","search","target","options","indexes","getPreparedSearch","getPrepared","allowTypo","algorithm","algorithmNoTypo","go","targets","searchLowerCode","prepareSearch","threshold","limit","resultsLen","limitedCount","targetsLen","keys","scoreFn","keysLen","objResults","keyI","key","_targetLowerCodes","_nextBeginningIndexes","results","goAsync","canceled","p","Promise","resolve","reject","iCurrent","step","startMs","Date","now","setImmediate","setTimeout","cancel","highlight","hOpen","hClose","highlightCallback","highlighted","matchesIndex","opened","targetLen","matchesBest","char","substr","cb","matchI","indexesI","push","prepare","prepareLowerCodes","prepareSlow","prepareNextBeginningIndexes","targetPrepared","searchPrepared","searchLowerCodes","prepared","targetLowerCodes","searchLen","searchI","targetI","typoSimpleI","matchesSimpleLen","typoStrictI","successStrict","matchesStrictLen","nextBeginningIndexes","firstPossibleI","matchesBestLen","lastTargetI","str","strLen","lowerCodes","lower","toLowerCase","charCodeAt","prepareBeginningIndexes","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","lastIsBeginning","lastIsBeginningI","new"],"sourceRoot":""}